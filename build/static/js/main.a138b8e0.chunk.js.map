{"version":3,"sources":["components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","console","log","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setTimeout","clearInterval","onCharLoaded","newChar","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","secondLogger","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","index","onCharSelected","onKeyDown","event","key","tabIndex","ref","el","renderItems","obj","default","catch","disabled","Skeleton","CharInfo","charId","skeleton","i","comicId","resourceURI","match","join","to","defaultProps","ErrorBoundary","state","errorInfo","this","setState","children","Component","MainPage","selectedChar","decoration","ComicsList","setComics","comicsEnded","setComicsEnded","onComicsLoaded","newComics","AppBanner","avengers","avengersLogo","ComicsPage","Page404","comic","SingleComicPage","useParams","setComic","updateComic","newComic","AppHeader","onActiveLink","color","isActive","end","App","exact","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a138b8e0.chunk.js","sourcesContent":["const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    // если когда-то нужно воспользоваться каким-то ресурсом из папки public. Но лучше этого не делать\r\n    /*     \r\n    return (\r\n        <img src={process.env.PUBLIC_URL + \"/error.gif\"} />\r\n    ) */\r\n\r\n    return (\r\n        <img style={{display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\"}} src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = \"apikey=b28678bc4a91005f923565d160271c61\";\r\n    const _baseOffset = 210;\r\n    const _comicsOffset = 0;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _comicsOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\r\n\r\n        console.log(res.data.results);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n        }\r\n    }\r\n\r\n    return {\r\n        loading,\r\n        error, \r\n        getAllCharacters,\r\n        getCharacter,\r\n        getAllComics,\r\n        getComic,\r\n        clearError\r\n    }\r\n}\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {\"Content-Type\": \"application/json\"}) => {\r\n        setLoading(loading => true);\r\n\r\n        try{\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(loading => false);\r\n            return data;\r\n\r\n        } catch(e){\r\n            setLoading(loading => false);\r\n            setError(error => e.message);\r\n            throw e;\r\n        }\r\n        \r\n    }, [])\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null)\r\n    }, []);\r\n\r\n\r\n    return {\r\n        loading,\r\n        request,\r\n        error, \r\n        clearError\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n    useEffect(() => {\n        updateChar();\n        const timerId = setTimeout(updateChar, 6000);\n\n        return () => {\n            clearInterval(timerId);\n        }\n    }, [])\n\n    const onCharLoaded = (newChar) => {\n        setChar(char => newChar);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n        .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport PropTypes from \"prop-types\";\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) =>{\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters, clearError} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        clearError();\n        initial ? setNewItemLoading(newItemLoading => false) : setNewItemLoading(newItemLoading => true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = async (newCharList) => {\n        // Динамическая import всегда ворзвращает Promise \n        const {secondLogger} = await import(\"./someFunc\");\n        secondLogger();\n\n        let ended = false;\n        if(newCharList.length < 9){\n            ended = true;\n        }\n        setCharList(charList => [...charList, ...newCharList])\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended)\n    }\n\n    // Когда мы создаем через React.createRef() или useRef() - это автоматически создается объект current и в него react засовывает все наши ref\n    const itemRefs = useRef([]);\n    /* \n        itemRefs = {\n            current: [\n                0: li.char__item\n                1: li.char__item\n                2: li.char__item\n                3: li.char__item\n                4: li.char__item\n                5: li.char__item\n                6: li.char__item\n                7: li.char__item\n                8: li.char__item\n            ]\n        }\n    \n    */\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => {\n            item.classList.remove(\"char__item_selected\");\n        })\n        itemRefs.current[id].classList.add(\"char__item_selected\")\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr){\n        const items =  arr.map((item, index) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(index);\n                    }}\n                    onKeyDown={event => {\n                        if(event.key === \" \" || event.key === \"Enter\"){\n                            props.onCharSelected(item.id);\n                            focusOnItem(index);\n                        }\n                    }}\n                    tabIndex=\"0\"\n                    ref={el => itemRefs.current[index] = el}\n                    >\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                        \n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n        \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading  && !newItemLoading ? <Spinner/> : null;\n\n    if(loading) {\n        // Динамический import всегда возвращает promise\n        import(\"./someFunc\")\n        .then(obj => obj.default())\n        .catch();\n\n        // Если мы пишем export default logger, то это бдует выглядеть так \n        /*  \n            {\n                default: (){\n                    console.log(\"Hello world!!\");\n                }\n            }\n        */\n    }\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{\"display\": charEnded ? \"none\" : \"block\"}}\n                    onClick={() => onRequest(offset, false)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;\n\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useState, useEffect, useMemo} from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = ({charId}) => {\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    useEffect(() => {\n        updateChar();\n    }, [charId])\n\n    const updateChar = () => {\n        if (!charId) {\n            return;\n        }\n        \n        clearError();\n        getCharacter(charId)\n        .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (newChar) => {\n        setChar(char => newChar);\n    }\n\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        const comicId = item.resourceURI.match(/\\d{3,5}/).join(\"\");\n                        if (i > 9) return;\n                        return (\n                            <Link to={`/comics/${comicId}`} key={comicId} className=\"char__comics-item\">\n                                {item.name}\n                            </Link>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.defaultProps = {\n    charId: null\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\nexport default CharInfo;","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\n// Предохранители ловят ошибки только в методе render(), в методах жизненного цикла компонента, и в компонентах, которые были переданы во внутрь предохранителя\r\n// Пример \r\n/* \r\n    <ErrorBoundary >\r\n        дочерний компонента предохранителя\r\n        <CharInfo charId={this.state.selectedChar}/>\r\n    </ErrorBoundary>\r\n*/\r\n// Предохранители не ловят ошибки внутри асинхронного кода, внутри себя, серверного рендеринга, внутри обработчика событий\r\nexport default class ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    static getDerivedStateFromError(error){\r\n        return {error: true}\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {error} = this.state;\r\n        if(error){\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return this.props.children;\r\n\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\n\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(selectedChar => id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary >\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import {useState, useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport './comicsList.scss';\n\n\nconst ComicsList = () => {\n    const [comics, setComics] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, clearError, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n\n    const onRequest = (offset, initial) => {\n        clearError();\n        initial ? setNewItemLoading(newItemLoading => false) : setNewItemLoading(newItemLoading => true);\n        getAllComics(offset)\n            .then(onComicsLoaded)\n    }\n\n    const onComicsLoaded = (newComics) => {\n        let ended = false;\n        if(newComics.length < 8){\n            ended = true;\n        }\n        setComics(comics => [...comics, ...newComics])\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(charEnded => ended)\n    }\n\n    const renderItems = (arr) => {\n        const items = arr.map((item, index) => {\n\n            return (\n                <li key={index}\n                    className=\"comics__item\">\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n\n        });\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        );\n    }\n\n    const items = renderItems(comics);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading  && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button className=\"button button__main button__long\"\n                    onClick={() => onRequest(offset, false)}\n                    disabled={newItemLoading}\n                    style={{\"display\": comicsEnded ? \"none\" : \"block\"}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\n\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>       \r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;\r\n\r\n\r\n","import ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>   \r\n            <ErrorMessage />\r\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesn't exist</p>\r\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px'}} to=\"/\">Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    // useParams() - этот хук от react-router-dom позволяет нам достать с url id комикса (id- 82965)/ Далее у нас все как в CharInfo\r\n    // у нас в url сейчас http://localhost:3000/comics/82965 - (id- 82965)\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, clearError, getComic} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {      \r\n        clearError();\r\n        getComic(comicId)\r\n        .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (newComic) => {\r\n        setComic(comic => newComic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>  \r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, thumbnail, language, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","\nimport {Link, NavLink} from \"react-router-dom\";\nimport './appHeader.scss';\n\n\nconst AppHeader = () => {\n    \n    const onActiveLink = ({isActive}) => {\n        return {color: isActive ? \"#9F0012\" : \"inherit\"};\n    };\n    // end - что все страницы, который содержат url путь \"/comics\" дудут окрашены в style - color: isActive ? \"#9F0012\" : \"inherit\"\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                                end\n                                to=\"/\"\n                                style={onActiveLink}>Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                                to=\"/comics\"\n                                style={onActiveLink}>Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\nexport default AppHeader;","\n// На самом деле функция называется BrowserRouter, но мы назовем его Router, второй компонент называется уже Route\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport { MainPage, ComicsPage, SingleComicPage} from \"../pages\";\nimport Page404 from \"../pages/404\";\nimport AppHeader from \"../appHeader/AppHeader\";\n\n\nconst App = () => {\n\n    // I.\n    // Мы завернули все это в Router, потому что в AppHeader у нас находятся ссылки на другие страницы, а альше идут страницы на этихъ ссылок, вот почему мы с=засунули все компоненты в Router (потому что дальше компонента AppHeader идут страницы этих ссылок). Короче говоря, засовывай в КОМПОНЕНТ Router, те компоненты у которых есть ссылки и дальше у нас идут страницы этих ссылок\n\n    // II. Мы не создавали никаких папок comics (в path=\"/comics\") - мы так просто прозвали страницу, в которой будет компонент AppBanner и ComicsList, компонент Route будет сам создаст эту страницу и назовет в url - localhost:3000/comics\n\n    // Короче говоря, засовывам компонент Route в компонент Switch. Компонент Route сам создаст нужные страницы для помещенных в него компоненты\n    // Path\n\n\n    // III.\n    // :comicId - вместо comicId можно писатьвсе что угодно, но двоеточие нужно обязательно ставить\n    // то есть Route нам откроет в браузере нам компонет SingleComicPage с id комикса на котолрого мы кликнули, потому что в ComicsList в renderItems у нас есть Link - <Link to={`/comics/${item.id}`}></Link>            \n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route exact path=\"/\" element={<MainPage />} />\n                        <Route path=\"/comics\" element={<ComicsPage />} />\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage />} />\n                        <Route path=\"*\" element={<Page404 />}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n"],"sourceRoot":""}